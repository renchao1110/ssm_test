<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hl95.demo.dao.LowerMapper">
  <resultMap id="BaseResultMap" type="com.hl95.demo.entity.Lower">
    <id column="epid" jdbcType="INTEGER" property="epid" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="message" jdbcType="VARCHAR" property="message" />
    <result column="linkid" jdbcType="INTEGER" property="linkid" />
    <result column="subcode" jdbcType="VARCHAR" property="subcode" />
    <result column="state" jdbcType="VARCHAR" property="state" />
    <result column="type" jdbcType="VARCHAR" property="type" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    epid, username, password, phone, message, linkid, subcode, state
  </sql>
  <select id="selectByExample" parameterType="com.hl95.demo.entity.LowerExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from lower
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from lower
    where epid = #{epid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from lower
    where epid = #{epid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hl95.demo.entity.LowerExample">
    delete from lower
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hl95.demo.entity.Lower">
    insert into lower (epid, username, password, 
      phone, message, linkid, 
      subcode, state)
    values (#{epid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{message,jdbcType=VARCHAR}, #{linkid,jdbcType=INTEGER}, 
      #{subcode,jdbcType=INTEGER}, #{state,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hl95.demo.entity.Lower">
    insert into lower
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="epid != null">
        epid,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="message != null">
        message,
      </if>
      <if test="linkid != null">
        linkid,
      </if>
      <if test="subcode != null">
        subcode,
      </if>
      <if test="state != null">
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="epid != null">
        #{epid,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="message != null">
        #{message,jdbcType=VARCHAR},
      </if>
      <if test="linkid != null">
        #{linkid,jdbcType=INTEGER},
      </if>
      <if test="subcode != null">
        #{subcode,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        #{state,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hl95.demo.entity.LowerExample" resultType="java.lang.Long">
    select count(*) from lower
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update lower
    <set>
      <if test="record.epid != null">
        epid = #{record.epid,jdbcType=INTEGER},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.message != null">
        message = #{record.message,jdbcType=VARCHAR},
      </if>
      <if test="record.linkid != null">
        linkid = #{record.linkid,jdbcType=INTEGER},
      </if>
      <if test="record.subcode != null">
        subcode = #{record.subcode,jdbcType=INTEGER},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update lower
    set epid = #{record.epid,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      message = #{record.message,jdbcType=VARCHAR},
      linkid = #{record.linkid,jdbcType=INTEGER},
      subcode = #{record.subcode,jdbcType=INTEGER},
      state = #{record.state,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hl95.demo.entity.Lower">
    update lower
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="message != null">
        message = #{message,jdbcType=VARCHAR},
      </if>
      <if test="linkid != null">
        linkid = #{linkid,jdbcType=INTEGER},
      </if>
      <if test="subcode != null">
        subcode = #{subcode,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        state = #{type,jdbcType=VARCHAR},
      </if>
    </set>
    where epid = #{epid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hl95.demo.entity.Lower">
    update lower
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      message = #{message,jdbcType=VARCHAR},
      linkid = #{linkid,jdbcType=INTEGER},
      subcode = #{subcode,jdbcType=INTEGER},
      state = #{state,jdbcType=VARCHAR},
      type  = #{type,jdbcType=VARCHAR} 
    where epid = #{epid,jdbcType=INTEGER}
  </update>
  
  
  <!-- 保存短信信息 -->
	<insert id="saveMsg">
		insert into
		lower(username,password,phone,message,epid,linkid,subcode,state,type)
		values(#{username},#{password},#{phone},#{message},#{epid},#{linkid},#{subcode},#{state},#{type});
	</insert>
	
	<select id="findLowerByReport"  resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from lower 
    where linkid = #{fLinkID} and phone = #{FDestAddr} 
  </select>
</mapper>